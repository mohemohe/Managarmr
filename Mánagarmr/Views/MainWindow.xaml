<Controls:MetroWindow x:Class="Mánagarmr.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Mánagarmr.Views"
        xmlns:vm="clr-namespace:Mánagarmr.ViewModels"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mainWindow="clr-namespace:Mánagarmr.ViewModels.MainWindow"
        Title="Mánagarmr" Height="620" Width="960" MinHeight="620" MinWidth="960" IconBitmapScalingMode="HighQuality" GlowBrush="{Binding WindowColor}" SaveWindowPosition="True" Icon="/Mánagarmr;component/Resources/icon.ico" FontFamily="Meiryo" TextOptions.TextFormattingMode="Ideal" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Aliased" UseLayoutRounding="True" FontSize="14" TitleCaps="False">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Views/MainWindowDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <mainWindow:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Disposes"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ActivatedWindow"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="DeactivatedWindow"/>
        </i:EventTrigger>
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Information">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding TweetCommand, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_twitter_bird}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="tweet" FontSize="12"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding ConfigWindowOpenCommand, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="settings" FontSize="12"/>
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>

        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid>
        <Grid Margin="0,0,0,100" ClipToBounds="True">
            <ScrollViewer Width="280" HorizontalAlignment="Left" Margin="0,42,0,0">
                <StackPanel>
                    <ListBox Name="UpperListBox" ItemContainerStyle="{DynamicResource ListBoxDummyStyle}" Margin="10" FontSize="14" VerticalAlignment="Top" PreviewMouseDown="UpperListBox_PreviewMouseDown">
                        <ListBoxItem Content="Random">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetRandomAlbumList"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBoxItem>
                        <ListBoxItem Content="Recently added">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetNewestAlbumList"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBoxItem>
                    </ListBox>
                    <Separator Margin="10,2"/>
                    <ListBox ItemContainerStyle="{DynamicResource ListBoxDummyStyle}" Name="BottomListBox" ItemsSource="{Binding MusicFolderList}" SelectedIndex="{Binding MusicFolderListIndex}" SelectedValue="{Binding MusicFolderListValue}" Margin="10,10,10,0" FontSize="14" VerticalAlignment="Top" PreviewMouseDown="BottomListBox_PreviewMouseDown">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ChangeLibraryList"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </StackPanel>
            </ScrollViewer>
            <Grid Margin="295,10,10,0">
                <Grid Height="64" VerticalAlignment="Top" Margin="10,0,0,0">
                    <Image Source="{Binding LibraryListHeaderImage, IsAsync=true}" RenderOptions.BitmapScalingMode="HighQuality" Height="64" HorizontalAlignment="Left" Width="64" Stretch="UniformToFill"/>
                    <Grid Margin="72,0,47,0">
                        <TextBlock Text="{Binding LibraryListHeaderTitle}" FontSize="24" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>
                        <TextBlock Text="{Binding LibraryListHeaderArtist}" Foreground="Gray" FontSize="14" TextTrimming="CharacterEllipsis" VerticalAlignment="Top" Margin="0,36,0,0"/>
                    </Grid>
                    <Button x:Name="AddPlayListButton" Command="{Binding AddPlayListCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="32" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="Black" Foreground="{x:Null}" BorderThickness="2" Height="32" VerticalAlignment="Bottom" Margin="0,0,15,0">
                        <Rectangle Width="16" Height="16" Fill="Black">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </Grid>
                <Grid Background="#FFFFFFFF" Margin="0,69,0,0">
                    <ListBox ItemsSource="{Binding LibraryList}" ItemContainerStyle="{DynamicResource ListBoxDummyStyle}" SelectedIndex="{Binding LibraryListIndex}"  Margin="0,10,0,0" FontSize="14" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ListBoxItem IsHitTestVisible="False">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Track}" FontFamily="Consolas" Padding="0,1,0,0" FontSize="15"/>
                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
                                        <TextBlock Text="{Binding Artist}" Foreground="Gray" TextTrimming="CharacterEllipsis" />
                                    </StackPanel>
                                </ListBoxItem>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="MoveLibraryList"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </Grid>
            </Grid>
            <Button Command="{Binding PlayListFlyoutsOpenCommand}" Style="{DynamicResource MetroCircleButtonStyle}" Width="64" Background="{x:Null}" BorderBrush="Black" Foreground="{x:Null}" BorderThickness="2" Height="64" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-15,-12,0" >
                <Rectangle Width="32" Height="32" Fill="Black">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{StaticResource appbar_list}" Stretch="Uniform" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBox Controls:TextboxHelper.ClearTextButton="True" Controls:TextboxHelper.Watermark="Search" Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,0,0" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Top" HorizontalAlignment="Left" Width="270"/>
        </Grid>
        <Grid Name="BottomBar" Height="64" VerticalAlignment="Bottom" Background="{Binding WindowColor}">
            <Border Name="CoverArea" Margin="0,-26,0,0" Height="90" VerticalAlignment="Bottom" BorderBrush="{Binding WindowColor}" BorderThickness="4" Background="{Binding WindowColor}" HorizontalAlignment="Left" Width="90">
                <Image Source="{Binding CoverArt, Mode=OneWay, IsAsync=True}" RenderOptions.BitmapScalingMode="HighQuality" />
            </Border>
            <TextBlock Text="{Binding Title}" Margin="100,6,388,0" VerticalAlignment="Top" Foreground="White" FontSize="24" TextTrimming="CharacterEllipsis" />
            <TextBlock Text="{Binding AlbumETC}" Margin="100,0,388,6" VerticalAlignment="Bottom" Foreground="White" FontSize="12" TextTrimming="CharacterEllipsis" />
            <Border Margin="100,-20,10,72" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" IsEnabled="False">
                <Controls:MetroProgressBar Background="{x:Null}" Foreground="{Binding WindowColor}" Maximum="{Binding ProgressBarMaxValue}" Value="{Binding ProgressBarCurrentValue}" IsIndeterminate="{Binding ProgressBarIsIndeterminate}" Margin="0" VerticalAlignment="Stretch"/>
            </Border>
            <Border Margin="100,-20,10,72" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" IsEnabled="False"/>
            <Button Name="PlayPauseButton" Command="{Binding PlayPauseCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="48" Height="48" HorizontalAlignment="Right" Margin="0,10,335,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="White" Foreground="{x:Null}" BorderThickness="2">
                <Rectangle Width="{Binding PlayPauseIconSize}" Height="{Binding PlayPauseIconSize}" Fill="White" Margin="{Binding PlayPauseIconMargin}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{Binding PlayPauseIcon}" Stretch="Uniform" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Name="StopButton" Command="{Binding StopCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="48" Height="48" HorizontalAlignment="Right" Margin="0,10,287,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="White" Foreground="{x:Null}" BorderThickness="2">
                <Rectangle Width="20" Height="20" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{StaticResource appbar_control_stop}" Stretch="Uniform" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Name="RewindButton" Command="{Binding RewindCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="48" Height="48" HorizontalAlignment="Right" Margin="0,10,239,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="White" Foreground="{x:Null}" BorderThickness="2">
                <Rectangle Width="24" Height="24" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{StaticResource appbar_control_rewind}" Stretch="Uniform" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Name="FastForwardButton" Command="{Binding FastForwardCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="48" Height="48" HorizontalAlignment="Right" Margin="0,10,191,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="White" Foreground="{x:Null}" BorderThickness="2">
                <Rectangle Width="24" Height="24" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{StaticResource appbar_control_fastforward}" Stretch="Uniform" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Name="RepeatButton" Command="{Binding RepeatModeCommand, Mode=OneWay}" Style="{DynamicResource MetroCircleButtonStyle}" Width="48" Height="48" HorizontalAlignment="Right" Margin="0,10,143,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="White" Foreground="{x:Null}" BorderThickness="2">
                <Grid>
                    <Rectangle Visibility="{Binding RepeatIconIsVisible}" Width="40" Height="40" Fill="White">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="../Resources/appbar.repeat.once.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Rectangle Width="24" Height="24" Fill="White">
                        <Rectangle.OpacityMask>
                            <VisualBrush Visual="{Binding RepeatIcon}" Stretch="Uniform" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>
            </Button>
            <Slider Name="VolumeSlider" Style="{DynamicResource FlatSlider}" Value="{Binding Volume, Mode=TwoWay}" Margin="0,0,10,18" Width="128" Foreground="White" Maximum="1" SmallChange="0.01" TickFrequency="0.1" LargeChange="0.1" Height="12" VerticalAlignment="Bottom" HorizontalAlignment="Right" BorderBrush="Black"/>
            <Label Content="{Binding VolumeString}" Margin="0,0,10,30" Padding="0" Foreground="White" HorizontalAlignment="Right" Height="15" VerticalAlignment="Bottom" FontSize="12"/>
        </Grid>

        <Controls:Flyout Header="Playlist" Position="Right" Theme="Light" IsOpen="{Binding PlayListFlyoutsIsOpen}" Margin="0,0,0,100" HorizontalAlignment="Right" Width="666">
            <ListBox ItemsSource="{Binding PlayList}" ItemContainerStyle="{DynamicResource ListBoxDummyStyle}" SelectedIndex="{Binding PlayListIndex}"  Margin="10,0,10,-100" FontSize="14" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ListBoxItem IsHitTestVisible="False">
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Track}" FontFamily="Consolas" Padding="0,1,0,0" FontSize="15"/>
                                    <TextBlock Text="{Binding Title}"/>
                                    <TextBlock Text="{Binding Artist}" Foreground="Gray"/>
                                </StackPanel>
                                <!--<Button x:Name="DeleteButton" Command="{Binding}" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" Width="18" Height="18"  Style="{DynamicResource ButtonDummyStyle}" Foreground="{x:Null}" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <Rectangle Fill="Black" Width="14" Height="14">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_close}" Stretch="Uniform" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>-->
                            </Grid>
                        </ListBoxItem>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDoubleClick">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="MovePlayList"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </Controls:Flyout>
    </Grid>
</Controls:MetroWindow>
